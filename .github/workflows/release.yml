# This workflow builds a .deb package when a version is pushed.

name: build-deb

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags: 
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  getversion:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{steps.version.outputs.non-prefixed}}
    steps:
      - name: Get version from tag name
        id: version
        uses: LykkeBusiness/get-semver-from-tag-action@v1.0.2
        with:
          tag: ${{ github.ref }}

  build-deb:
    runs-on: ubuntu-latest
    needs: getversion

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Create the package contents directory structure
      - name: Assemble package contents
        id: assemble
        run: |
          mkdir -p $GITHUB_WORKSPACE/tmp/debpkg/DEBIAN
          mkdir -p $GITHUB_WORKSPACE/tmp/debpkg/opt/quartersbrief
          cp -r $GITHUB_WORKSPACE/src $GITHUB_WORKSPACE/tmp/debpkg/opt/quartersbrief
          cp -r $GITHUB_WORKSPACE/assets $GITHUB_WORKSPACE/tmp/debpkg/opt/quartersbrief
          cp -r $GITHUB_WORKSPACE/scripts $GITHUB_WORKSPACE/tmp/debpkg/opt/quartersbrief
          cp $GITHUB_WORKSPACE/package.json $GITHUB_WORKSPACE/tmp/debpkg/opt/quartersbrief
          cp $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/tmp/debpkg/opt/quartersbrief
          echo "::set-output name=pkgroot::$GITHUB_WORKSPACE/tmp/debpkg"

      # Create .deb control scripts
      - name: Create maintainer scripts
        run: |
          # preinst
          echo "cat << EOF
            #!/bin/sh
            if dpkg --print-foreign-architectures | grep i386; then
              echo 'quartersbrief depends on wine32 for automatic updates, but i386 is not set as a foreign architecture. Run dpkg --add-architecture i386 so wine32 can be installed.' >&2
            fi
          EOF" > ${{ steps.assemble.outputs.pkgroot }}/DEBIAN/preinst && chmod +x ${{ steps.assemble.outputs.pkgroot }}/DEBIAN/preinst
          # postinst
          echo "cd /opt/quartersbrief && npm install --production --no-package-lock --no-progress --quiet && npm link" > ${{ steps.assemble.outputs.pkgroot }}/DEBIAN/postinst && chmod +x ${{ steps.assemble.outputs.pkgroot }}/DEBIAN/postinst
          # prerm
          echo "rm -rf /opt/quartersbrief/tools /opt/quartersbrief/node_modules /opt/quartersbrief/tools" > ${{ steps.assemble.outputs.pkgroot }}/DEBIAN/prerm && chmod +x ${{ steps.assemble.outputs.pkgroot }}/DEBIAN/prerm

      - name: Build .deb package
        uses: jiro4989/build-deb-action@v2
        id: package
        with:
          package: quartersbrief
          package_root: ${{ steps.assemble.outputs.pkgroot }}
          version: ${{ needs.getversion.outputs.version }}
          maintainer: 'BadIdeaException'
          arch: 'amd64'
          depends: 'nodejs (>= 17.0.0), wine, wine32, python3'

      - uses: actions/upload-artifact@v3
        with: 
          name: deb
          path: ${{ steps.package.outputs.file_name }}
          retention-days: 1

  build-exe:
    needs: getversion
    runs-on: windows-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Assemble installer contents
        run: |
          mkdir ${{ github.workspace }}\tmp\installer\app
          xcopy /s /e ${{ github.workspace }}\src ${{ github.workspace }}\tmp\installer\app\src\
          xcopy /s /e ${{ github.workspace }}\assets ${{ github.workspace }}\tmp\installer\app\assets\
          xcopy /s /e ${{ github.workspace }}\scripts ${{ github.workspace }}\tmp\installer\app\scripts\
          xcopy ${{ github.workspace }}\package.json ${{ github.workspace }}\tmp\installer\app\
          xcopy ${{ github.workspace }}\README.md ${{ github.workspace }}\tmp\installer\app\
          xcopy ${{ github.workspace }}\.github\workflows\res\windows\install.nsi ${{ github.workspace }}\tmp\installer\

      # Download NodeJS and Python 3 installers to bundle with the install
      - name: Download NodeJS and Python 3
        run: |
          mkdir ${{ github.workspace }}\tmp\installer\redist
          bitsadmin /transfer DownloadNode /download /priority normal https://nodejs.org/dist/v17.8.0/node-v17.8.0-x64.msi ${{ github.workspace }}\tmp\installer\redist\nodejs.msi
          bitsadmin /transfer DownloadNode /download /priority normal https://www.python.org/ftp/python/3.10.4/python-3.10.4-amd64.exe ${{ github.workspace }}\tmp\installer\redist\python3.exe
      
      - name: Build Setup.exe
        id: package
        run: |
          makensis -DVERSION ${{ needs.getversion.outputs.version }} ${{ github.workspace }}\tmp\installer\install.nsi
          echo "::set-output name=file_name::${{ github.workspace }}\tmp\installer\Setup Quartersbrief v${{ needs.getversion.outputs.version }}.exe"

      - uses: actions/upload-artifact@v3
        with:
          name: exe
          path: ${{ steps.package.outputs.file_name }}

  release:  
    runs-on: ubuntu-latest
    needs: [build-deb, build-exe]
    steps:
      - uses: actions/download-artifact@v3
      
      - uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            deb
            exe